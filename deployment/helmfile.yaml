repositories:
  - name: parity
    url: https://paritytech.github.io/helm-charts/

helmDefaults:
  createNamespace: false
  waitForJobs: true

releases:
  # - name: validator-car
  #   namespace: freeverse-relay-chain
  #   chart: parity/node
  #   version: 4.7.2
  #   values:
  #     - image:
  #         tag: v0.9.42
  #     - node:
  #         legacyRpcFlags: true
  #         chain: rococo-freeverse
  #         replicas: 1
  #         customChainspecUrl: "https://raw.githubusercontent.com/freeverseio/laos-ownership-node/dev/specs/rococo-freeverse-chainspec.json"
  #         forceDownloadChainspec: true
  #         role: authority
  #         chainData:
  #           storageClass: do-block-storage
  #         perNodeServices:
  #           relayP2pService:
  #             enabled: true
  #             type: LoadBalancer
  #             ws:
  #               enabled: true
  #         allowUnsafeRpcMethods: true
  # - name: validator-ale
  #   namespace: freeverse-relay-chain
  #   chart: parity/node
  #   version: 4.7.2
  #   values:
  #     - image:
  #         tag: v0.9.42
  #     - node:
  #         legacyRpcFlags: true
  #         chain: rococo-freeverse
  #         replicas: 1
  #         customChainspecUrl: "https://raw.githubusercontent.com/freeverseio/laos-ownership-node/dev/specs/rococo-freeverse-chainspec.json"
  #         forceDownloadChainspec: true
  #         role: authority
  #         chainData:
  #           storageClass: do-block-storage
  #         perNodeServices:
  #           relayP2pService:
  #             enabled: true
  #             ws:
  #               enabled: true
  #         allowUnsafeRpcMethods: true
  - name: collator-car
    namespace: arrakis-evolution-chain
    chart: parity/node
    version: 4.7.2
    values:
      - image:
          repository: freeverseio/laos-ownership-node
          tag: v0.0.3-dev
      - node:
          legacyRpcFlags: true
          chain: arrakis
          command: "parachain-template-node"
          replicas: 1
          role: authority
          chainData:
            storageClass: do-block-storage
          perNodeServices:
            paraP2pService:
              enabled: true
              type: LoadBalancer
              ws:
                enabled: true
          allowUnsafeRpcMethods: true
          isParachain: true
          collatorRelayChain:
            chainData:
              storageClass: do-block-storage
  # - name: collator2-car
  #   namespace: arrakis-ownership-chain
  #   chart: parity/node
  #   version: 4.7.2
  #   values:
  #     - image:
  #         repository: freeverseio/laos-ownership-node
  #         tag: v0.0.4-dev
  #     - node:
  #         legacyRpcFlags: true
  #         chain: arrakis
  #         command: "parachain-template-node"
  #         replicas: 1
  #         role: authority
  #         chainData:
  #           storageClass: do-block-storage
  #         perNodeServices:
  #           paraP2pService:
  #             enabled: true
  #             type: LoadBalancer
  #             ws:
  #               enabled: true
  #         allowUnsafeRpcMethods: true
  #         isParachain: true
  #         collatorRelayChain:
  #           chainData:
  #             storageClass: do-block-storage
  # - name: public-node
  #   namespace: arrakis-ownership-chain
  #   chart: parity/node
  #   version: 4.7.2
  #   values:
  #     - image:
  #         repository: freeverseio/laos-ownership-node
  #         tag: v0.0.4-dev
  #     - node:
  #         chain: arrakis
  #         legacyRpcFlags: true
  #         command: "parachain-template-node"
  #         replicas: 1
  #         chainData:
  #           storageClass: do-block-storage
  #         paraP2pService:
  #             enabled: true
  #             ws:
  #               enabled: true
  #         allowUnsafeRpcMethods: true
  #         isParachain: true
  #         collatorRelayChain:
  #           chainData:
  #             storageClass: do-block-storage
  #     - ingress:
  #         enabled: true
  #         annotations:
  #           kubernetes.io/ingress.class: "nginx"
  #           nginx.ingress.kubernetes.io/auth-tls-verify-client: "on"
  #           nginx.ingress.kubernetes.io/auth-tls-verify-depth: "1"
  #           nginx.ingress.kubernetes.io/auth-tls-error-page: "http://www.mysite.com/error-cert.html"
  #           nginx.ingress.kubernetes.io/auth-tls-pass-certificate-to-upstream: "true"
  #           nginx.ingress.kubernetes.io/websocket-services: "public-node"
  #           cert-manager.io/cluster-issuer: letsencrypt-freeverse
  #         rules:
  #         - host: arrakis.gorengine.com
  #           http:
  #             paths:
  #             - path: /own
  #               pathType: Prefix
  #               backend:
  #                 service:
  #                   name: public-node
  #                   port:
  #                     name: websocket-rpc
  #         tls:
  #           - hosts:
  #             - arrakis.gorengine.com
  #             secretName: public-node-tls